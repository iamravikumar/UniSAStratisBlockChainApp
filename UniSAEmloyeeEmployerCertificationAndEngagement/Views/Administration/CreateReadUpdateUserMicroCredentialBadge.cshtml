@model UniSAEmloyeeEmployerCertificationAndEngagement.Models.MicroCredentialBadgeViewModel

@{
    ViewBag.Title = "CreateReadUpdateUserMicroCredentialBadge";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div id="FormDiv" style="padding:10px !important;">
        <h2>Create Read Update Or Delete User MicroCredentialBadge</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MicroCredentialBadgeViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.MicroCredentialBadgeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MicroCredentialBadgeId", ViewBag.MicroCredentialBadgeIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
            @Html.ValidationMessageFor(model => model.MicroCredentialBadgeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CandidateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CandidateId", ViewBag.CandidateIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
            @Html.ValidationMessageFor(model => model.CandidateId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MicroCredentialId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MicroCredentialId", ViewBag.MicroCredentialIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
            @Html.ValidationMessageFor(model => model.MicroCredentialId, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MicroCredentialBadges, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MicroCredentialBadges, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MicroCredentialBadges, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Select" name="Select" class="btn btn-default" />
            </div>
            <div class="col-md-2">
                <input type="submit" value="Insert" name="Insert" class="btn btn-default" />
            </div>
            <div class="col-md-2">
                <input type="submit" value="Update" name="Update" class="btn btn-default" />
            </div>
            <div class="col-md-2">
                <input type="submit" value="Delete" name="Delete" class="btn btn-default" />
            </div>
        </div>
    </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>