@model UniSAEmloyeeEmployerCertificationAndEngagement.Models.SelectDeleteCandidateViewModel

@{
    ViewBag.Title = "CreateReadUpdateCandidate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="FormDiv" style="padding:10px !important;">
    <h2>Create Read Update Or Delete Candidate</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>CandidateViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CandidateId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CandidateId", ViewBag.CandidateIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                    @Html.ValidationMessageFor(model => model.CandidateId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AddressId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AddressId", ViewBag.AddressIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                    @Html.ValidationMessageFor(model => model.AddressId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HighestQualification, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HighestQualification, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HighestQualification, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AppliedJobsId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AppliedJobsId", ViewBag.JobsIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                    @Html.ValidationMessageFor(model => model.AppliedJobsId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DigitalBadgeEarned, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DigitalBadgeEarned, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DigitalBadgeEarned, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MicroCredentialEnrolledId, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.DropDownList("MicroCredentialEnrolledId", ViewBag.MicroCredentialIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                    @Html.ValidationMessageFor(model => model.MicroCredentialEnrolledId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-2">
                    <input type="submit" value="Select" name="Select" class="btn btn-default" />
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Insert" name="Insert" class="btn btn-default" />
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Update" name="Update" class="btn btn-default" />
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Delete" name="Delete" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>