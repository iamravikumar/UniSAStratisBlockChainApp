@model UniSAEmloyeeEmployerCertificationAndEngagement.Models.SelectDeleteMicroCredentialViewModel

@{
    ViewBag.Title = "CreateReadUpdateMicroCredential";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


    <div id="FormDiv" style="padding:10px !important;">
        <h2>Create Read Update Or Delete MicroCredential</h2>

        @using (Html.BeginForm())
        {
            @*@HtmlHelper.ClientValidationEnabled = false;*@
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MicroCredentialViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MicroCredentialId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MicroCredentialId", ViewBag.MicroCredentialIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                @Html.ValidationMessageFor(model => model.MicroCredentialId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MoocProviderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MoocProviderId", ViewBag.MoocProviderIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                @Html.ValidationMessageFor(model => model.MoocProviderId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MicroCredentialCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MicroCredentialCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MicroCredentialCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MicroCredentialName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MicroCredentialName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MicroCredentialName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MicroCredentialDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MicroCredentialDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MicroCredentialDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfCredits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfCredits, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfCredits, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccreditedBodyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AccreditedBodyId", ViewBag.AccreditedBodyIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                @Html.ValidationMessageFor(model => model.AccreditedBodyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CertificateFee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CertificateFee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CertificateFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DurationStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DurationStart, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DurationStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DurationEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DurationEnd, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DurationEnd, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-check row">
            <span class="col-md-offset-2"></span>
            <input type="checkbox" class="col-md-2 form-check" name="IsAccredited" id="IsAccredited" style="text-align:right !important;" />
            <label class="col-md-10 form-label" for="IsAccredited" style="font-weight:bolder !important;">IsAccredited</label>
        </div>
        <div class="form-check row">
            <span class="col-md-offset-2"></span>
            <input type="checkbox" class="col-md-2 form-check" name="IsEndorsed" id="IsEndorsed" />
            <label class="col-md-10 form-label" for="IsEndorsed" style="font-weight:bolder !important;">IsEndorsed</label>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EndorsedBodyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EndorsedBodyId", ViewBag.EndorsedBodyIdList as List<SelectListItem>, htmlAttributes: new { @class = " select-wrapper col-md-10" })
                @Html.ValidationMessageFor(model => model.EndorsedBodyId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" name="Select" value="Select" class="btn btn-default" />
            </div>
            <div class="col-md-2">
                <input type="submit" name="Update" value="Update" class="btn btn-default" />
            </div>
            <div class="col-md-2">
                <input type="submit" name="Insert" value="Insert" class="btn btn-default" />
            </div>
        </div>
    </div>
}

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
